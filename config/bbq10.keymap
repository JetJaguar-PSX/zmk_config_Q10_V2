/*
 * Copyright (c) 2023 ZitaoTech
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define SYM 1
#define UPPER 2

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mkp LCLK>, <&bt BT_CLR>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            bindings = <&out &kp>;
        };
    };

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            bindings = <&ext_power>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mkp RCLK           &mkp LCLK
&mt LG(TAB) K_BACK  &mkp MCLK  &mkp LCLK  &mkp RCLK  &kp LS(CAPS)
&kp Q               &kp W      &kp E      &kp R      &kp T               &kp Y        &kp U                    &kp I         &kp O      &kp P
&kp A               &kp S      &kp D      &kp F      &kp G               &kp H        &kp J                    &kp K         &kp L      &kp BSPC
&tog 2              &kp Z      &kp X      &kp C      &kp V               &kp B        &kp N                    &kp M         &kp LCTRL  &kp ENTER
                               &kt LSHFT             &lt 1 INT_MUHENKAN  &kp SPACE    &mt LEFT_ALT INT_HENKAN  &kp LEFT_GUI
            >;
        };

        layer1 {
            bindings = <
&trans  &trans
&trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp LS(LPAR)  &kp LS(RPAR)    &kp HOME  &kp END    &kp LS(LT)  &kp LS(GT)
&trans  &trans  &trans  &trans  &kp LBKT      &kp RBKT        &kp LEFT  &kp RIGHT  &trans      &trans
&trans  &trans  &trans  &trans  &kp LS(LBRC)  &kp LS(RBRC)    &kp DOWN  &kp UP     &trans      &trans
                &trans          &trans        &trans          &trans    &trans
            >;
        };

        layer2 {
            bindings = <
&trans           &trans
&trans           &trans           &trans           &trans           &trans
&kp KP_MINUS     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS      &kp UNDERSCORE    &kp UNDERSCORE  &kp MINUS   &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE
&kp KP_ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SLASH     &kp COLON         &kp SEMICOLON   &kp AT      &kp HASH           &kp BACKSLASH
&trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DOT       &kp CARET         &kp COMMA       &kp PERIOD  &kp DOLLAR         &kp GRAVE
                                  &kp KP_EQUAL                      &kp KP_NUMBER_0  &trans            &trans          &trans
            >;
        };

        upper_layer {
            bindings = <
&msc SCRL_UP  &msc SCRL_DOWN
&bt BT_SEL 0  &bt BT_SEL 1    &td0       &bt BT_SEL 2  &bt BT_SEL 3
&none         &kp UP          &none      &sys_reset    &ext_power EP_TOG  &none                &kp LT      &kp GT    &kp PIPE     &kp EQUAL
&kp LEFT      &kp DOWN        &kp RIGHT  &none         &kp BSLH           &kp AMPS             &kp LBRC    &kp RBRC  &kp CARET    &kp BSPC
&kp LSHFT     &none           &none      &none         &bl BL_DEC         &bl BL_TOG           &bl BL_INC  &none     &bootloader  &kp ENTER
                              &kp LCTRL                &kp LALT           &hm OUT_TOG SPACE    &to 3       &to 0
            >;
        };
    };
};
